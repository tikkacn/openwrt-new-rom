name: Check GitHub Actions Runner Region

on:
  workflow_dispatch: # 允许手动触发

jobs:
  determine_runner_region:
    runs-on: ubuntu-latest # 您也可以使用 ubuntu-22.04
    name: Determine Runner Azure Region and IP Location

    steps:
      - name: Checkout code (optional, good practice)
        uses: actions/checkout@v4

      - name: Install tools (curl and jq)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl jq

      - name: Display Runner Region Information
        id: region_check
        run: |
          echo " "
          echo "====================================================="
          echo "Attempting to determine runner's Azure region from metadata..."
          echo "====================================================="
          # Increased timeout for IMDS curl, and ensure it fails gracefully if IMDS not reachable
          AZURE_REGION=$(curl -s -H Metadata:true --connect-timeout 7 --max-time 10 "http://169.254.169.254/metadata/instance/compute/location?api-version=2021-02-01&format=text")

          if [ -n "$AZURE_REGION" ]; then
            echo " "
            echo "-----------------------------------------------------"
            echo "✅ GitHub Actions Runner is in Azure region: $AZURE_REGION"
            echo "-----------------------------------------------------"
            echo "azure_region=$AZURE_REGION" >> $GITHUB_OUTPUT
          else
            echo " "
            echo "-----------------------------------------------------"
            echo "⚠️ Could not determine Azure region directly from Azure metadata service."
            echo "   This might happen if the runner is not an Azure VM, metadata access is restricted, or the service is temporarily unavailable."
            echo "   Attempting IP-based geolocation as a fallback (less precise for Azure region):"
            echo "-----------------------------------------------------"
            PUBLIC_IP=$(curl -s --connect-timeout 7 --max-time 10 ifconfig.me)
            
            if [ -n "$PUBLIC_IP" ]; then
              echo "Runner's Public IP: $PUBLIC_IP"
              echo "azure_region=N/A_IMDS_Failed_IP_${PUBLIC_IP}" >> $GITHUB_OUTPUT # Store something indicative
              echo " "
              echo "Geolocation information for IP $PUBLIC_IP (from ipapi.co):"
              # Check if jq is available for pretty printing
              if command -v jq &> /dev/null; then
                curl -s --connect-timeout 7 --max-time 10 "https://ipapi.co/${PUBLIC_IP}/json/" | jq .
              else
                echo "(jq not available, showing raw JSON if possible)"
                curl -s --connect-timeout 7 --max-time 10 "https://ipapi.co/${PUBLIC_IP}/json/" || echo "Could not fetch geolocation from ipapi.co for IP $PUBLIC_IP"
              fi
            else
              echo "Could not fetch public IP address for geolocation fallback."
              echo "azure_region=N/A_IMDS_Failed_IP_Unknown" >> $GITHUB_OUTPUT
            fi
            echo "-----------------------------------------------------"
          fi
          echo " "

      - name: Print determined region from step output
        run: |
          echo "Determined Azure Region (from step output, if available): ${{ steps.region_check.outputs.azure_region || 'Not determined' }}"
