name: Test Problem Packages

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  TZ: Asia/Shanghai
  WORKDIR: ${{ github.workspace }}
  OPENWRT_ROOT: ${{ github.workspace }}/openwrt

jobs:
  test-packages:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Initialize environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo timedatectl set-timezone "$TZ"
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
        gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev \
        file wget python3 python3-pip python3-ply python3-setuptools
        sudo -E apt-get -qq install golang-go ninja-build
        sudo -E apt-get -qq install libpcre3-dev libssl-dev libmbedtls-dev

    - name: Clone source code
      working-directory: ${{ env.WORKDIR }}
      run: |
        git clone --depth=1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf ${{ env.OPENWRT_ROOT }} openwrt

    - name: Setup feeds
      run: |
        cd ${{ env.OPENWRT_ROOT }}
        echo "src-git helloworld https://github.com/fw876/helloworld" >> feeds.conf.default
        cat feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Prepare compilation
      run: |
        cd ${{ env.OPENWRT_ROOT }}
        cat >> .config <<EOF
        CONFIG_PACKAGE_simple-obfs=y
        CONFIG_PACKAGE_pcre=y
        CONFIG_PACKAGE_gn=y
        EOF
        make defconfig

    - name: Build toolchain
      run: |
        cd ${{ env.OPENWRT_ROOT }}
        echo "Building toolchain..."
        make toolchain/install -j$(nproc) V=s

    - name: Test problem packages
      run: |
        cd ${{ env.OPENWRT_ROOT }}
        mkdir -p logs
        
        echo "Testing simple-obfs..."
        make package/feeds/helloworld/simple-obfs/compile V=s || {
          echo "simple-obfs failed"
          find logs/ -type f -exec cat {} \;
        }
        
        echo "Testing pcre..."
        make package/libs/pcre/compile V=s || {
          echo "pcre failed"
          find logs/ -type f -exec cat {} \;
        }
        
        echo "Testing gn..."
        make package/feeds/helloworld/gn/host/compile V=s || {
          echo "gn failed"
          find logs/ -type f -exec cat {} \;
        }

    - name: Upload logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-logs
        path: |
          ${{ env.OPENWRT_ROOT }}/logs/
          ${{ env.OPENWRT_ROOT }}/.config
