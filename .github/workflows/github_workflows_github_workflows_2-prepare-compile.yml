name: "2. Prepare OpenWrt Compile"

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["1. Init OpenWrt Build Environment"]
    types:
      - completed

permissions:
  contents: read
  packages: read
  actions: write

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  TZ: Asia/Shanghai

jobs:
  prepare:
    runs-on: ubuntu-22.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Free Disk Space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true
        docker-images: true

    - name: Cache apt packages
      uses: actions/cache@v3
      with:
        path: /var/cache/apt
        key: ${{ runner.os }}-apt-${{ hashFiles('**/depends-ubuntu-2204') }}
        restore-keys: |
          ${{ runner.os }}-apt-

    - name: Setup Build Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-distutils python3-lib2to3 python3-setuptools python3-dev build-essential
        sudo ln -sf /usr/bin/python3 /usr/bin/python
        # 验证 Python 环境
        python3 -c "import distutils" || { echo "Error: distutils import failed"; exit 1; }
        python3 -c "import setuptools" || { echo "Error: setuptools import failed"; exit 1; }
        python3 --version

    - name: Checkout
      uses: actions/checkout@main

    - name: Cache OpenWrt source
      uses: actions/cache@v3
      with:
        path: openwrt
        key: ${{ runner.os }}-openwrt-${{ env.REPO_BRANCH }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-openwrt-${{ env.REPO_BRANCH }}-

    - name: Clone Source Code
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        echo "SOURCE_CODE_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Load Custom Feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update Feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load Custom Configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download Package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

        # 验证下载的文件完整性
        cd dl
        for f in *.tar.* *.tgz *.txz; do
          if [ -f "$f" ]; then
            echo "Verifying $f"
            tar tf "$f" > /dev/null || echo "Warning: $f may be corrupted"
          fi
        done

    - name: Cache OpenWrt Build Environment
      uses: actions/upload-artifact@v4
      with:
        name: OpenWrt_BuildFiles
        path: openwrt/
        retention-days: 1
        if-no-files-found: error

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 1
        keep_minimum_runs: 3