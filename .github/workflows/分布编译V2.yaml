name: 分步编译V2

on:
  workflow_dispatch:    # 仅保留手动触发

jobs:
  prepare:
    runs-on: ubuntu-20.04
    outputs:
      date: ${{ steps.date.outputs.date }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Get Date
        id: date
        run: echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Initialize Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E swapoff -a
          sudo -E rm -f /swapfile
          sudo -E docker image prune -a -f
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
          sudo -E apt-get -qq install build-essential clang flex g++ gawk gcc-multilib gettext \
            git libncurses5-dev libssl-dev python3-distutils python3-pyelftools python3-setuptools \
            libpython3-dev rsync unzip zlib1g-dev file wget
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "Asia/Shanghai"

      - name: Clone Source Code
        run: |
          git clone https://github.com/coolsnowwolf/lede openwrt
          
      - name: Load Custom Files
        run: |
          [ -e files ] && mv files openwrt/files
          [ -e .config ] && mv .config openwrt/.config
          [ -e feeds.conf.default ] && mv feeds.conf.default openwrt/feeds.conf.default

      - name: Update Feeds
        run: |
          cd openwrt
          ./scripts/feeds clean
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate Config
        run: |
          cd openwrt
          make defconfig

      - name: Cache Build Files
        uses: actions/cache/save@v3
        with:
          path: |
            openwrt
          key: openwrt-${{ steps.date.outputs.date }}

  compile:
    needs: prepare
    runs-on: ubuntu-20.04
    steps:
      - name: Restore Cache
        uses: actions/cache/restore@v3
        with:
          path: |
            openwrt
          key: openwrt-${{ needs.prepare.outputs.date }}
          fail-on-cache-miss: true

      - name: Compile Tools
        id: tools
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make tools/install -j$(nproc) || make tools/install -j1 V=s

      - name: Compile Toolchain
        id: toolchain
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make toolchain/install -j$(nproc) || make toolchain/install -j1 V=s

      - name: Compile Packages
        id: compile
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 V=s
          echo "status=success" >> $GITHUB_OUTPUT
          grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
          [ -s DEVICE_NAME ] && echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_OUTPUT
          echo "FILE_DATE=$(date +"%Y.%m.%d")" >> $GITHUB_OUTPUT

      - name: Upload Firmware
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_firmware_${{ steps.compile.outputs.DEVICE_NAME }}_${{ steps.compile.outputs.FILE_DATE }}
          path: openwrt/bin/targets/

      - name: Generate release tag
        id: tag
        if: steps.compile.outputs.status == 'success'
        run: |
          echo "release_tag=OpenWrt_${{ steps.compile.outputs.DEVICE_NAME }}_$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
          touch release.txt
          echo "This is OpenWrt firmware for ${{ steps.compile.outputs.DEVICE_NAME }}" >> release.txt
          echo "Compiled on $(date +"%Y-%m-%d %H:%M:%S")" >> release.txt

      - name: Upload firmware to release
        uses: softprops/action-gh-release@v1
        if: steps.compile.outputs.status == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: openwrt/bin/targets/*/*/*
