name: "3. Compile OpenWrt Firmware"

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["2. Prepare OpenWrt Compile"]
    types:
      - completed

env:
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  compile:
    runs-on: ubuntu-22.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Free Disk Space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true
        docker-images: true

    - name: Setup Python Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-dev python3-pip python3-setuptools
        sudo apt-get install -y python3-distutils-extra python-is-python3
        sudo apt-get install -y python3-pkg-resources python3-venv
        
        # 创建虚拟环境并安装必要的包
        python3 -m venv /tmp/openwrt_venv
        source /tmp/openwrt_venv/bin/activate
        pip3 install --upgrade pip setuptools wheel
        
        # 设置 Python 路径
        echo "PYTHONPATH=/usr/lib/python3/dist-packages:/usr/local/lib/python3/dist-packages" >> $GITHUB_ENV
        echo "PATH=/tmp/openwrt_venv/bin:$PATH" >> $GITHUB_ENV

    - name: Verify Python Installation
      run: |
        source /tmp/openwrt_venv/bin/activate
        python3 --version
        echo "Python path:"
        python3 -c "import sys; print('\n'.join(sys.path))"
        echo "Checking distutils:"
        python3 -c "import distutils" && echo "distutils OK" || echo "distutils FAILED"
        echo "Installed packages:"
        pip3 list

    - name: Checkout
      uses: actions/checkout@main

    - name: Download Build Files
      uses: actions/download-artifact@v4
      with:
        name: OpenWrt_Files
        path: openwrt
        repository: ${{ github.repository }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ github.event.workflow_run.id }}

    - name: Set Permissions
      run: |
        chmod -R +x openwrt/scripts
        chmod -R +x openwrt/target

    - name: Configure Build
      run: |
        cd openwrt
        echo "CONFIG_DEVEL=y" >> .config
        echo "CONFIG_CCACHE=y" >> .config
        echo "CONFIG_TOOLCHAINOPTS=y" >> .config
        
        # 确保配置文件存在
        [ -f .config ] || {
          echo "::error::Configuration file not found"
          exit 1
        }

    - name: Compile firmware
      id: compile
      run: |
        cd openwrt
        source /tmp/openwrt_venv/bin/activate
        
        # 设置编译环境变量
        export FORCE=1
        export PYTHON=/tmp/openwrt_venv/bin/python3
        export PYTHON_VERSION=$(python3 --version | cut -d' ' -f2)
        
        echo "Using Python: $PYTHON"
        echo "Python version: $PYTHON_VERSION"
        echo "PYTHONPATH: $PYTHONPATH"
        
        # 编译固件
        echo "Starting compilation with $(nproc) threads"
        make defconfig
        FORCE=1 V=s make -j$(nproc) || FORCE=1 V=s make -j1
        
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware
      uses: actions/upload-artifact@v4
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_Firmware
        path: ${{ env.FIRMWARE }}
        retention-days: 7

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 1
        keep_minimum_runs: 3
