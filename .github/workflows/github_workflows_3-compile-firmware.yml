name: "3. Compile OpenWrt Firmware"

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["2. Prepare OpenWrt Compile"]
    types:
      - completed

env:
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  compile:
    runs-on: ubuntu-22.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Free Disk Space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true
        docker-images: true

    - name: Setup Build Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-distutils python3-lib2to3 python3-setuptools python3-dev
        sudo ln -sf /usr/bin/python3 /usr/bin/python
        # 验证 Python 环境
        python3 -c "import distutils" || { echo "Error: distutils import failed"; exit 1; }
        python3 -c "import setuptools" || { echo "Error: setuptools import failed"; exit 1; }
        python3 --version

    - name: Checkout
      uses: actions/checkout@main

    - name: Download Build Info
      uses: actions/download-artifact@v4
      with:
        name: BuildInfo
        path: ./
        repository: ${{ github.repository }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ github.event.workflow_run.id }}

    - name: Load Cache Key
      id: cache-key
      run: |
        [ -f "cache_key.txt" ] || { echo "Error: cache_key.txt not found"; exit 1; }
        CACHE_KEY=$(cat cache_key.txt)
        echo "Using cache key: $CACHE_KEY"
        echo "cache_key=$CACHE_KEY" >> $GITHUB_OUTPUT

    - name: Restore Cache
      id: restore-cache
      uses: actions/cache/restore@v4
      with:
        path: |
          openwrt
          !openwrt/build_dir/*/host/*
          !openwrt/build_dir/*/hostpkg/*
        key: ${{ steps.cache-key.outputs.cache_key }}
        enableCrossOsArchive: true
        fail-on-cache-miss: true

    - name: Verify Environment
      run: |
        # 验证目录结构
        [ -d "openwrt" ] || { echo "Error: openwrt directory missing"; exit 1; }
        [ -d "openwrt/scripts" ] || { echo "Error: scripts directory missing"; exit 1; }
        [ -d "openwrt/target" ] || { echo "Error: target directory missing"; exit 1; }
        [ -f "openwrt/.config" ] || { echo "Error: .config missing"; exit 1; }
        
        # 验证权限
        chmod -R +x openwrt/scripts
        chmod -R +x openwrt/target
        find openwrt/scripts -type f -exec test -x {} \; || echo "Warning: Some scripts may not be executable"

    - name: Compile Firmware
      id: compile
      run: |
        cd openwrt
        echo "Starting compilation with $(nproc) threads"
        
        # 设置环境变量
        export FORCE=1
        export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
        
        # 编译固件
        make defconfig
        make -j$(nproc) || {
          echo "Parallel compilation failed, trying single thread..."
          make -j1 V=s
        }
        
        [ -d "bin/targets" ] || { echo "Error: Compilation failed - no targets directory"; exit 1; }
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Organize Files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        [ -d "." ] || { echo "Error: No firmware files found"; exit 1; }
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload Firmware
      uses: actions/upload-artifact@v4
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_Firmware
        path: ${{ env.FIRMWARE }}
        retention-days: 7

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 1
        keep_minimum_runs: 3
