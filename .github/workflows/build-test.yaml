name: OpenWrt Build Test

on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  prepare:
    runs-on: ubuntu-22.04
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    
    steps:
    - name: Check Server Performance
      run: |
        echo "======================="
        echo "CPU Model Information:"
        lscpu
        echo "======================="
        echo "Memory Information:"
        free -h
        echo "======================="
        echo "Disk Space Information:"
        df -hT
        echo "======================="

    - name: Checkout repository
      uses: actions/checkout@main

    - name: Maximize Build Space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 512
        swap-size-mb: 1024
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: Setup Build Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
        gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev \
        file wget
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone OpenWrt Source
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        echo "WORKDIR=$PWD" >> $GITHUB_ENV
        echo "::set-output name=key::$(date +%Y%m%d%H%M%S)"
      id: cache-key

    - name: Print Directory Structure
      run: |
        echo "Directory structure in /workdir/openwrt:"
        ls -la /workdir/openwrt
        echo "Symlink status:"
        ls -la $GITHUB_WORKSPACE/openwrt

    - name: Cache Source Code
      uses: actions/cache@v3
      with:
        path: /workdir/openwrt
        key: openwrt-source-${{ steps.cache-key.outputs.key }}
        restore-keys: |
          openwrt-source-

  update-feeds:
    needs: prepare
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Restore Source Code
      uses: actions/cache@v3
      with:
        path: /workdir/openwrt
        key: openwrt-source-${{ needs.prepare.outputs.cache-key }}

    - name: Setup Custom Feeds
      run: |
        mkdir -p /workdir/openwrt
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF /workdir/openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd /workdir/openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update and Install Feeds
      run: |
        cd /workdir/openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Cache Updated Feeds
      uses: actions/cache@v3
      with:
        path: /workdir/openwrt
        key: openwrt-feeds-${{ needs.prepare.outputs.cache-key }}

  configure:
    needs: [prepare, update-feeds]
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Restore Updated Source
      uses: actions/cache@v3
      with:
        path: /workdir/openwrt
        key: openwrt-feeds-${{ needs.prepare.outputs.cache-key }}

    - name: Load Custom Configuration
      run: |
        [ -e files ] && mv files /workdir/openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE /workdir/openwrt/.config
        chmod +x $DIY_P2_SH
        cd /workdir/openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Generate Default Config
      run: |
        cd /workdir/openwrt
        make defconfig
        
    - name: Show Config File
      run: |
        cd /workdir/openwrt
        cat .config

    - name: Download Package Sources
      id: package
      run: |
        cd /workdir/openwrt
        make download -j8 || make download -j1 V=s
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Cache Configured Source
      uses: actions/cache@v3
      with:
        path: /workdir/openwrt
        key: openwrt-configured-${{ needs.prepare.outputs.cache-key }}

  compile:
    needs: configure
    runs-on: ubuntu-22.04
    timeout-minutes: 360
    
    steps:
    - name: Restore Configured Source
      uses: actions/cache@v3
      with:
        path: /workdir/openwrt
        key: openwrt-configured-${{ needs.prepare.outputs.cache-key }}

    - name: Compile Firmware
      id: compile
      run: |
        cd /workdir/openwrt
        echo "CPU cores: $(nproc)"
        echo "Starting compilation..."
        make -j$(($(nproc) + 1)) || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check Space Usage
      if: always()
      run: |
        cd /workdir/openwrt
        echo "============== Compilation Results =============="
        if [ -d bin/targets ]; then
          echo "Directory structure of bin/targets/:"
          ls -R bin/targets/
        else
          echo "bin/targets/ directory not found"
        fi
        echo "============== Space Usage =============="
        df -hT
        echo "============== Memory Usage =============="
        free -h

    - name: Upload Compilation Logs
      if: failure()
      uses: actions/upload-artifact@main
      with:
        name: compilation-logs
        path: /workdir/openwrt/logs/

    - name: Cache Compiled Files
      if: steps.compile.outputs.status == 'success'
      uses: actions/cache@v3
      with:
        path: /workdir/openwrt
        key: openwrt-compiled-${{ needs.prepare.outputs.cache-key }}

  upload:
    needs: [compile]
    runs-on: ubuntu-22.04
    if: success()
    
    steps:
    - name: Restore Compiled Files
      uses: actions/cache@v3
      with:
        path: /workdir/openwrt
        key: openwrt-compiled-${{ needs.prepare.outputs.cache-key }}

    - name: Organize Firmware Files
      run: |
        cd /workdir/openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: Upload Firmware
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
