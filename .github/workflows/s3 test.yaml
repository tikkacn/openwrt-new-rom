name: Test S3 Upload Functionality

on:
  workflow_dispatch:
    inputs:
      s3_bucket_override:
        description: '(可选) 临时覆盖 S3 存储桶名称 (用于测试，留空则使用 Secret)'
        required: false
        default: ''
      s3_path_prefix:
        description: 'S3 中用于测试文件的路径前缀 (例如 test-uploads/my-branch)'
        required: false
        default: 'github_actions_s3_test_uploads/debug' # 建议使用一个专门的测试路径
      test_file_name:
        description: '要创建和上传的测试文件名'
        required: false
        default: 's3_connectivity_test_file.txt'
      test_file_content:
        description: '测试文件的内容'
        required: false
        default: 'This is a test file to verify S3 upload from GitHub Actions at $(date)'

jobs:
  test_s3_connectivity:
    name: Test S3 Upload, Download, and Delete
    runs-on: ubuntu-latest # ubuntu-latest 通常已安装 AWS CLI

    steps:
      - name: Set up Test Variables and Resolve Bucket Name
        id: setup_vars
        run: |
          EFFECTIVE_BUCKET_NAME=""
          if [ -n "${{ github.event.inputs.s3_bucket_override }}" ]; then
            EFFECTIVE_BUCKET_NAME="${{ github.event.inputs.s3_bucket_override }}"
            echo "::notice title=S3 Bucket Info::Using S3 bucket name from input override: ${EFFECTIVE_BUCKET_NAME}"
          elif [ -n "${{ secrets.AWS_S3_BUCKET_NAME }}" ]; then
            EFFECTIVE_BUCKET_NAME="${{ secrets.AWS_S3_BUCKET_NAME }}"
            echo "::notice title=S3 Bucket Info::Using S3 bucket name from secrets.AWS_S3_BUCKET_NAME."
          else
            echo "::error title=S3 Bucket Name Missing::S3 bucket name is not provided via input (s3_bucket_override) AND not found in secrets (AWS_S3_BUCKET_NAME). Please set one."
            exit 1
          fi
          echo "EFFECTIVE_BUCKET_NAME=${EFFECTIVE_BUCKET_NAME}" >> $GITHUB_ENV
          echo "EFFECTIVE_S3_PATH_PREFIX=${{ github.event.inputs.s3_path_prefix }}" >> $GITHUB_ENV
          echo "EFFECTIVE_TEST_FILE_NAME=${{ github.event.inputs.test_file_name }}" >> $GITHUB_ENV
          echo "EFFECTIVE_TEST_FILE_CONTENT='${{ github.event.inputs.test_file_content }}'" >> $GITHUB_ENV # Store content for later

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }} # 确保这是您的S3存储桶所在的区域

      - name: Create Local Test File
        id: create_file
        run: |
          echo "Creating local test file: ${{ env.EFFECTIVE_TEST_FILE_NAME }}"
          # 使用 eval 来正确处理包含变量或命令替换的内容
          eval "echo \"${{ env.EFFECTIVE_TEST_FILE_CONTENT }}\"" > "${{ env.EFFECTIVE_TEST_FILE_NAME }}"
          echo "Local test file content:"
          cat "${{ env.EFFECTIVE_TEST_FILE_NAME }}"
          ls -l "${{ env.EFFECTIVE_TEST_FILE_NAME }}"
          echo "local_file_path=${{ env.EFFECTIVE_TEST_FILE_NAME }}" >> $GITHUB_OUTPUT

      - name: Attempt to Upload Test File to S3
        id: upload_file
        run: |
          LOCAL_FILE="${{ steps.create_file.outputs.local_file_path }}"
          S3_OBJECT_KEY="${{ env.EFFECTIVE_S3_PATH_PREFIX }}/${{ env.EFFECTIVE_TEST_FILE_NAME }}"
          S3_URI="s3://${{ env.EFFECTIVE_BUCKET_NAME }}/${S3_OBJECT_KEY}"

          echo "Attempting to upload '${LOCAL_FILE}' to '${S3_URI}'"
          # 使用 --debug 参数获取详细输出
          if aws s3 cp "${LOCAL_FILE}" "${S3_URI}" --debug; then
            echo "::notice title=S3 Upload Success::Test file successfully uploaded to ${S3_URI}"
            echo "upload_successful=true" >> $GITHUB_OUTPUT
            echo "s3_uri=${S3_URI}" >> $GITHUB_OUTPUT
          else
            echo "::error title=S3 Upload Failed::Failed to upload test file to ${S3_URI}. Check AWS credentials, IAM permissions (s3:PutObject), bucket name, region, and path."
            echo "upload_successful=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Attempt to Download Test File from S3 (Verify)
        if: steps.upload_file.outputs.upload_successful == 'true'
        id: download_file
        run: |
          S3_URI_TO_DOWNLOAD="${{ steps.upload_file.outputs.s3_uri }}"
          DOWNLOADED_FILE_NAME="downloaded_${{ env.EFFECTIVE_TEST_FILE_NAME }}"
          
          echo "Attempting to download from '${S3_URI_TO_DOWNLOAD}' to '${DOWNLOADED_FILE_NAME}'"
          if aws s3 cp "${S3_URI_TO_DOWNLOAD}" "${DOWNLOADED_FILE_NAME}" --debug; then
            echo "::notice title=S3 Download Success::Test file successfully downloaded to ${DOWNLOADED_FILE_NAME}."
            echo "Downloaded content:"
            cat "${DOWNLOADED_FILE_NAME}"
            # 内容校验
            if cmp -s "${{ steps.create_file.outputs.local_file_path }}" "${DOWNLOADED_FILE_NAME}"; then
              echo "::notice title=Content Verification Success::Downloaded file content matches the original."
            else
              echo "::error title=Content Verification Failed::Downloaded file content does NOT match the original."
              # exit 1 # 根据需要决定是否因此失败
            fi
          else
            echo "::error title=S3 Download Failed::Failed to download test file from ${S3_URI_TO_DOWNLOAD}."
            exit 1
          fi

      - name: Clean up Test File from S3 (Optional)
        if: always() && steps.upload_file.outputs.upload_successful == 'true'
        run: |
          S3_URI_TO_DELETE="${{ steps.upload_file.outputs.s3_uri }}"
          echo "Attempting to delete test file '${S3_URI_TO_DELETE}' from S3..."
          if aws s3 rm "${S3_URI_TO_DELETE}" --debug; then
            echo "::notice title=S3 Cleanup Success::Test file successfully deleted from S3."
          else
            # 只是警告，不因此失败整个工作流
            echo "::warning title=S3 Cleanup Failed::Failed to delete test file from S3. Manual cleanup may be required at ${S3_URI_TO_DELETE}."
          fi
