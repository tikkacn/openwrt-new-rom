name: "1. Init OpenWrt Build Environment"

on:
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  init:
    runs-on: ubuntu-22.04

    steps:
    - name: Before freeing up disk space
      run: |
        echo "Before freeing up disk space" | tee -a init-env.log
        echo "==============================================================================" | tee -a init-env.log
        df -hT | tee -a init-env.log
        echo "==============================================================================" | tee -a init-env.log

    - name: "Optimize Disk Space"
      uses: "hugoalh/disk-space-optimizer-ghaction@v0.8.1"
      with:
        operate_sudo: "True"
        general_include: ".+"
        general_exclude: |-
          ^GCC$
          ^G\+\+$
          Clang
          LLVM
        docker_include: ".+"
        docker_prune: "True"
        docker_clean: "True"
        apt_prune: "True"
        apt_clean: "True"
        homebrew_prune: "True"
        homebrew_clean: "True"
        npm_prune: "True"
        npm_clean: "True"
        os_swap: "True"

    - name: Freeing up disk space
      uses: easimon/maximize-build-space@master
      with: 
        root-reserve-mb: 2048
        swap-size-mb: 1
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: Free up disk space complete
      run: |
        echo "Free up disk space complete" | tee -a init-env.log
        echo "==============================================================================" | tee -a init-env.log
        df -hT | tee -a init-env.log
        echo "==============================================================================" | tee -a init-env.log

    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update | tee -a init-env.log
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
        git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
        libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
        mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools \
        libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
        vim wget xmlto xxd zlib1g-dev python3-setuptools | tee -a init-env.log
        sudo -E apt-get -qq autoremove --purge | tee -a init-env.log
        sudo -E apt-get -qq clean | tee -a init-env.log
        sudo rm -rf /etc/apt/sources.list.d/* /usr/local/lib/android /opt/ghc /usr/share/dotnet /usr/local/graalvm /usr/local/.ghcup \
        /usr/local/share/powershell /usr/local/share/chromium /usr/local/lib/node_modules | tee -a init-env.log
        sudo timedatectl set-timezone "$TZ" | tee -a init-env.log
        sudo chown $USER:$GROUPS $GITHUB_WORKSPACE | tee -a init-env.log

    - name: Upload Init Env Logs
      uses: actions/upload-artifact@v2
      with:
        name: init-env-logs
        path: init-env.log

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 1
        keep_minimum_runs: 3