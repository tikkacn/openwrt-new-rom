name: 分布编译 OpenWrt Build

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  TZ: Asia/Shanghai
  MAX_JOBS: 4

jobs:
  prepare:
    runs-on: ubuntu-22.04
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Optimize Disk Space
        run: sudo apt-get -qq remove --purge dotnet* android* haskell* -y && sudo apt-get -qq clean
      
      - name: Install Dependencies
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install build-essential gcc-multilib g++-multilib flex bison gawk gettext \
          libncurses5-dev libssl-dev rsync unzip zlib1g-dev file wget subversion python3

      - name: Clone OpenWrt Source Code
        run: |
          git clone --depth=1 $REPO_URL -b $REPO_BRANCH openwrt
          cd openwrt
          [ -e ../$FEEDS_CONF ] && mv ../$FEEDS_CONF feeds.conf.default

      - name: Update and Install Feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Load Custom Configuration
        run: |
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          chmod +x $DIY_P2_SH
          cd openwrt
          $GITHUB_WORKSPACE/$DIY_P2_SH

      - name: Cache Build Dependencies
        uses: actions/cache@v4
        with:
          path: openwrt/dl
          key: openwrt-deps-${{ github.run_id }}

  compile:
    needs: prepare
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        part: ["toolchain", "kernel", "packages", "firmware"]
    steps:
      - name: Restore Cached Dependencies
        uses: actions/cache@v4
        with:
          path: openwrt/dl
          key: openwrt-deps-${{ needs.prepare.outputs.cache-key }}

      - name: Compile ${{ matrix.part }}
        run: |
          cd openwrt
          case "${{ matrix.part }}" in
            toolchain)
              make toolchain/install -j$MAX_JOBS
              ;;
            kernel)
              make target/linux/compile -j$MAX_JOBS
              ;;
            packages)
              make package/compile -j$MAX_JOBS
              ;;
            firmware)
              make -j$MAX_JOBS
              ;;
          esac

  package:
    needs: compile
    runs-on: ubuntu-22.04
    steps:
      - name: Organize Compiled Files
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV

      - name: Upload Compiled Firmware
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_firmware
          path: ${{ env.FIRMWARE }}
