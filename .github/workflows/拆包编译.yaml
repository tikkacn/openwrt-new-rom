name: 拆包编译

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  TZ: Asia/Shanghai

jobs:
  build-toolchain:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialize Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install software-properties-common
        sudo -E add-apt-repository -y "ppa:git-core/ppa"
        sudo -E add-apt-repository -y universe
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/coolsnowwolf/lede/master/scripts/ubuntu-sdk)

    - name: Clone Source Code
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        sed -i 's/192.168.1.1/192.168.2.1/g' package/base-files/files/bin/config_generate
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Generate Config
      run: |
        cd openwrt
        cat > .config <<'EOF'
        CONFIG_TARGET_x86=y
        CONFIG_TARGET_x86_64=y
        CONFIG_TARGET_x86_64_DEVICE_generic=y
        CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
        CONFIG_PACKAGE_ip6tables=y
        CONFIG_PACKAGE_ipv6helper=y
        EOF
        make defconfig

    - name: Compile Toolchain
      run: |
        cd openwrt
        make toolchain/install -j$(($(nproc) + 1)) || make toolchain/install V=s

    - name: Upload Toolchain
      uses: actions/upload-artifact@v4
      with:
        name: toolchain
        path: openwrt

  build-target:
    needs: build-toolchain
    runs-on: ubuntu-latest
    steps:
    - name: Download Toolchain
      uses: actions/download-artifact@v4
      with:
        name: toolchain
        path: openwrt

    - name: Fix Permissions
      run: |
        cd openwrt
        sudo chown -R runner:runner .
        chmod +x scripts/* tools/*/compile

    - name: Initialize Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install software-properties-common
        sudo -E add-apt-repository -y "ppa:git-core/ppa"
        sudo -E add-apt-repository -y universe
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/coolsnowwolf/lede/master/scripts/ubuntu-sdk)

    - name: Build Target
      run: |
        cd openwrt
        make target/compile -j$(($(nproc) + 1)) || make target/compile V=s

    - name: Upload Target
      uses: actions/upload-artifact@v4
      with:
        name: target
        path: openwrt

  build-packages:
    needs: build-target
    runs-on: ubuntu-latest
    steps:
    - name: Download Build Files
      uses: actions/download-artifact@v4
      with:
        name: target
        path: openwrt

    - name: Fix Permissions
      run: |
        cd openwrt
        sudo chown -R runner:runner .
        chmod +x scripts/* tools/*/compile

    - name: Initialize Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install software-properties-common
        sudo -E add-apt-repository -y "ppa:git-core/ppa"
        sudo -E add-apt-repository -y universe
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/coolsnowwolf/lede/master/scripts/ubuntu-sdk)

    - name: Build Packages
      run: |
        cd openwrt
        make package/compile -j$(($(nproc) + 1)) || make package/compile V=s
        make package/index

    - name: Generate Firmware
      run: |
        cd openwrt
        make target/install -j$(($(nproc) + 1)) || make target/install V=s
        make package/install
        make buildinfo
        make json_overview_image_info
        make checksum

    - name: Upload Firmware
      uses: actions/upload-artifact@v4
      with:
        name: OpenWrt_firmware
        path: openwrt/bin/targets/
